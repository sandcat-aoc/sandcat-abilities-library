- id: a55a22e9-a3d3-42ce-bd48-2653adb8f7a9
  name: Domain Account and Group Manipulate
  description: "Create a random atr-nnnnnnnn account and add it to a domain group\
    \ (by default, Domain Admins). \n\nThe quickest way to run it is against a domain\
    \ controller, using `-Session` of `Invoke-AtomicTest`. Alternatively,\nyou need\
    \ to install PS Module ActiveDirectory (in prereqs) and run the script with appropriare\
    \ AD privileges to \ncreate the user and alter the group. Automatic installation\
    \ of the dependency requires an elevated session, \nand is unlikely to work with\
    \ Powershell Core (untested).\n\nIf you consider running this test against a production\
    \ Active Directory, the good practise is to create a dedicated\nservice account\
    \ whose delegation is given onto a dedicated OU for user creation and deletion,\
    \ as well as delegated\nas group manager of the target group.\n\nExample: `Invoke-AtomicTest\
    \ -Session $session 'T1098' -TestNames \"Domain Account and Group Manipulate\"\
    \ -InputArgs @{\"group\" = \"DNSAdmins\" }`"
  tactic: persistence
  technique:
    attack_id: T1098
    name: Account Manipulation
  platforms:
    windows:
      psh:
        command: 'Try {; Import-Module ActiveDirectory -ErrorAction Stop | Out-Null;
          exit 0; }; Catch {; exit 1; }; then : ; else if((Get-CimInstance -ClassName
          Win32_OperatingSystem).ProductType -eq 1) {; Add-WindowsCapability -Name
          (Get-WindowsCapability -Name RSAT.ActiveDirectory.DS* -Online).Name -Online;
          } else {; Install-WindowsFeature RSAT-AD-PowerShell; }; fi; $x = Get-Random
          -Minimum 2 -Maximum 99; $y = Get-Random -Minimum 2 -Maximum 99; $z = Get-Random
          -Minimum 2 -Maximum 99; $w = Get-Random -Minimum 2 -Maximum 99; Import-Module
          ActiveDirectory; $account = "atr--$x$y$z"; New-ADUser -Name $account -GivenName
          "Test" -DisplayName $account -SamAccountName $account -Surname $account
          -Enabled:$False #{create_args}; Add-ADGroupMember "Domain Admins" $account'
        cleanup: Get-ADUser -LDAPFilter "(&(samaccountname=#{account_prefix}-*)(givenName=Test))"
          | Remove-ADUser -Confirm:$False
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - t1098
  - persistence
  - atomic-red-team
  author: Atomic Red Team
  additional_info:
    input_arguments:
      account_prefix:
        description: 'Prefix string of the random username (by default, atr-). Because
          the cleanup deletes such account based on

          a match `(&(samaccountname=#{account_prefix}-*)(givenName=Test))`, if you
          are to change it, be careful.

          '
        type: string
        default: atr-
      group:
        description: Name of the group to alter
        type: string
        default: Domain Admins
      create_args:
        description: Additional string appended to New-ADUser call
        type: string
        default: ''
    dependencies:
    - description: 'PS Module ActiveDirectory

        '
      prereq_command: "Try {\n    Import-Module ActiveDirectory -ErrorAction Stop\
        \ | Out-Null\n    exit 0\n} \nCatch {\n    exit 1\n}\n"
      get_prereq_command: "if((Get-CimInstance -ClassName Win32_OperatingSystem).ProductType\
        \ -eq 1) {\n  Add-WindowsCapability -Name (Get-WindowsCapability -Name RSAT.ActiveDirectory.DS*\
        \ -Online).Name -Online\n} else {\n  Install-WindowsFeature RSAT-AD-PowerShell\n\
        }\n"
    technique_created: '2017-05-31T21:31:12.196Z'
    atomic_guid: a55a22e9-a3d3-42ce-bd48-2653adb8f7a9
    import_timestamp: '2025-08-30T02:56:44.872399Z'
