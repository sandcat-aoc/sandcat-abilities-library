- id: cc4a0b8c-426f-40ff-9426-4e10e5bf4c49
  name: Install root CA on macOS
  description: Creates a root CA with openssl
  tactic: defense-evasion
  technique:
    attack_id: T1553.004
    name: 'Subvert Trust Controls: Install Root Certificate'
  platforms:
    darwin:
      sh:
        command: 'if [ -f rootCA.crt ]; then : ; else if [ ! -f rootCA.key ]; then
          openssl genrsa -out rootCA.key 4096; fi;; openssl req -x509 -new -nodes
          -key rootCA.key -sha256 -days 365 -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com"
          -out rootCA.crt; fi; sudo security add-trusted-cert -d -r trustRoot -k "/Library/Keychains/System.keychain"
          "rootCA.crt"'
        elevation_required: true
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - t1553.004
  - defense-evasion
  - atomic-red-team
  author: Atomic Red Team
  additional_info:
    input_arguments:
      cert_filename:
        description: CA file name
        type: path
        default: rootCA.crt
      key_filename:
        description: Key we create that is used to create the CA certificate
        type: path
        default: rootCA.key
    dependencies:
    - description: 'Verify the certificate exists. It generates if not on disk.

        '
      prereq_command: 'if [ -f #{cert_filename} ]; then exit 0; else exit 1; fi;

        '
      get_prereq_command: 'if [ ! -f #{key_filename} ]; then openssl genrsa -out #{key_filename}
        4096; fi;

        openssl req -x509 -new -nodes -key #{key_filename} -sha256 -days 365 -subj
        "/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com" -out #{cert_filename}

        '
    technique_created: '2020-02-21T21:05:32.844Z'
    atomic_guid: cc4a0b8c-426f-40ff-9426-4e10e5bf4c49
    import_timestamp: '2025-08-07T03:44:08.657884Z'
