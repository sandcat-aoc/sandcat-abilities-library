- id: d1f72fa0-5bc2-4b4b-bd1e-43b6e8cfb2e6
  name: Cobalt Strike SSH (postex_ssh) pipe
  description: 'Uses the [Named Pipes Micro Emulation](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/micro_emulation_plans/src/named_pipes)
    executable from the Center for Threat Informed Defense to create a named pipe
    for inter-process communication.


    The named pipe executable will pause for 30 seconds to allow the client and server
    to exchange a message through the pipe.'
  tactic: execution
  technique:
    attack_id: T1559
    name: Inter-Process Communication
  platforms:
    windows:
      sh:
        command: 'if ((Test-Path "PathToAtomicsFolder\..\ExternalPayloads\build\namedpipes_executor.exe")
          -and (Test-Path "PathToAtomicsFolder\..\ExternalPayloads\build\namedpipes_client.exe")
          -and (Test-Path "PathToAtomicsFolder\..\ExternalPayloads\build\namedpipes_server.exe"))
          {exit 0} else {exit 1}; then : ; else New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\"
          -ErrorAction ignore -Force | Out-Null; [Net.ServicePointManager]::SecurityProtocol
          = [Net.SecurityProtocolType]::Tls12; IEX (iwr "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1"
          -UseBasicParsing); $zipUrl  = "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/raw/master/micro_emulation_plans/src/named_pipes/named_pipes.zip";
          Invoke-FetchFromZip $zipUrl "*.exe" "PathToAtomicsFolder\..\ExternalPayloads";
          fi; "PathToAtomicsFolder\..\ExternalPayloads\build\namedpipes_executor.exe"
          --pipe 3'
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - t1559
  - execution
  - atomic-red-team
  author: Atomic Red Team
  additional_info:
    dependencies:
    - description: 'Named pipe executors must exist on disk

        '
      prereq_command: 'if ((Test-Path "PathToAtomicsFolder\..\ExternalPayloads\build\namedpipes_executor.exe")
        -and (Test-Path "PathToAtomicsFolder\..\ExternalPayloads\build\namedpipes_client.exe")
        -and (Test-Path "PathToAtomicsFolder\..\ExternalPayloads\build\namedpipes_server.exe"))
        {exit 0} else {exit 1}

        '
      get_prereq_command: 'New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\"
        -ErrorAction ignore -Force | Out-Null

        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

        IEX (iwr "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1"
        -UseBasicParsing)

        $zipUrl  = "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/raw/master/micro_emulation_plans/src/named_pipes/named_pipes.zip"

        Invoke-FetchFromZip $zipUrl "*.exe" "PathToAtomicsFolder\..\ExternalPayloads"

        '
    technique_created: '2020-02-12T14:08:48.689Z'
    atomic_guid: d1f72fa0-5bc2-4b4b-bd1e-43b6e8cfb2e6
    import_timestamp: '2025-09-21T03:08:07.561731Z'
