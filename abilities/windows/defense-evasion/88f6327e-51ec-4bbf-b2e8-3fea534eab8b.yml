- id: 88f6327e-51ec-4bbf-b2e8-3fea534eab8b
  name: Read volume boot sector via DOS device path (PowerShell)
  description: "This test uses PowerShell to open a handle on the drive volume via\
    \ the `\\\\.\\` [DOS device path specifier](https://docs.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths)\
    \ and perform direct access read of the first few bytes of the volume.\nOn success,\
    \ a hex dump of the first 11 bytes of the volume is displayed.\n\nFor a NTFS volume,\
    \ it should correspond to the following sequence ([NTFS partition boot sector](https://en.wikipedia.org/wiki/NTFS#Partition_Boot_Sector_(VBR))):\n\
    ```\n           00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\n00000000  \
    \ EB 52 90 4E 54 46 53 20 20 20 20                 \xEBR?NTFS\n```"
  tactic: defense-evasion
  technique:
    attack_id: T1006
    name: Direct Volume Access
  platforms:
    windows:
      psh:
        command: $buffer = New-Object byte[] 11; $handle = New-Object IO.FileStream
          "\\.\C:", 'Open', 'Read', 'ReadWrite'; $handle.Read($buffer, 0, $buffer.Length);
          $handle.Close(); Format-Hex -InputObject $buffer
        elevation_required: true
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - t1006
  - atomic-red-team
  - defense-evasion
  author: Atomic Red Team
  additional_info:
    input_arguments:
      volume:
        description: Drive letter of the volume to access
        type: string
        default: 'C:'
    technique_created: '2017-05-31T21:30:20.934Z'
    atomic_guid: 88f6327e-51ec-4bbf-b2e8-3fea534eab8b
    import_timestamp: '2025-08-31T03:07:21.743758Z'
