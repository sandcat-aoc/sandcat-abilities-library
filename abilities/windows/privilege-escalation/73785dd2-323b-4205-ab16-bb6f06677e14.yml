- id: 73785dd2-323b-4205-ab16-bb6f06677e14
  name: EarlyBird APC Queue Injection in Go
  description: "Creates a process in a suspended state and calls QueueUserAPC WinAPI\
    \ to add a UserAPC to the child process that points to allocated shellcode. \n\
    ResumeThread is called which then calls NtTestAlert to execute the created UserAPC\
    \ which then executes the shellcode.\nThis technique allows for the early execution\
    \ of shellcode and potentially before AV/EDR can hook functions to support detection.\n\
    - PoC Credit: (https://github.com/Ne0nd0g/go-shellcode#createprocesswithpipe)\n\
    - References: \n  - https://www.bleepingcomputer.com/news/security/early-bird-code-injection-technique-helps-malware-stay-undetected/\n\
    \  - https://www.ired.team/offensive-security/code-injection-process-injection/early-bird-apc-queue-code-injection"
  tactic: privilege-escalation
  technique:
    attack_id: T1055.004
    name: 'Process Injection: Asynchronous Procedure Call'
  platforms:
    windows:
      psh:
        command: $PathToAtomicsFolder\T1055.004\bin\x64\EarlyBird.exe -program "C:\Windows\System32\werfault.exe"
          -debug
        cleanup: Stop-Process -Name CalculatorApp -ErrorAction SilentlyContinue; Stop-Process
          -Name "#{spawn_process_name}" -ErrorAction SilentlyContinue
        elevation_required: false
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - atomic-red-team
  - t1055.004
  - privilege-escalation
  author: Atomic Red Team
  additional_info:
    input_arguments:
      spawn_process_path:
        description: Path of the binary to spawn
        type: string
        default: C:\Windows\System32\werfault.exe
      spawn_process_name:
        description: Name of the process to spawn
        type: string
        default: werfault
    technique_created: '2020-01-14T01:29:43.786Z'
    atomic_guid: 73785dd2-323b-4205-ab16-bb6f06677e14
    import_timestamp: '2025-08-05T03:47:13.922424Z'
