- id: e2e8a2e4-3fc3-22c9-051f-a5eb867556cb
  name: osascript - Use the osascript binary to execute a JXA (JavaScript for Automation) file.
  description: JXA is often used by red teams (and potentially attackers) as a macOS payload, as JXA is
    native to macOS and can access various internal macOS APIs (such as Cocoa, Foundation, OSAKit, etc.).
    The osascript binary can be used to execute JXA payloads by simply running "osascript [file.js]" but
    some malware or offensive tools may also use "osascript -l JavaScript [file.js]".
  tactic: execution
  technique:
    attack_id: T1059.002
    name: 'Command and Scripting Interpreter: AppleScript'
  platforms:
    darwin:
      sh:
        command: echo "ObjC.import('Cocoa');\nObjC.import('stdlib');\nvar currentApp = Application.currentApplication();\ncurrentApp.includeStandardAdditions
          = true;\ncurrentApp.doShellScript('open -a Calculator.app');" > calc.js && osascript -l JavaScript
          calc.js
  singleton: false
  privilege: User
  repeatable: true
  delete_payload: false
  buckets:
  - loobins
  - osascript
  - execution
  version: '1.0'
  author: LOOBins Project
  additional_info:
    loobins_tool: osascript
    use_case: Use the osascript binary to execute a JXA (JavaScript for Automation) file.
    source_file: osascript.yml
    source_repository: https://github.com/infosecB/LOOBins
    import_timestamp: '2025-08-29T03:02:22.180658Z'
